import datetime


class Employee:

    num_of_emps = 0
    raise_amt = 1.04

    def __init__(self, first, last, pay):
        self.first = first
        self.last = last
        self.pay = pay
        self.email = first + '.' + last + '@company.com'

        Employee.num_of_emps += 1

    def fullname(self):
        return '{} {}'.format(self.first, self.last)

    def apply_raise(self):
        self.pay = int(self.pay * self.raise_amt)

    @classmethod
    def set_raise_amt(cls, amount):
        cls.raise_amt = amount

    @classmethod
    def from_string(cls, emp_str):
        first, last, pay = emp_str.split('-')
        return cls(first, last, pay)

    @staticmethod
    def is_workday(day):
        if day.weekday() == 5 or day.weekday() == 6:
            return False
        return True


class Developer(Employee):
    raise_amt = 1.10

    def __init__(self, first, last, pay, prog_lang):
        super().__init__(first, last, pay)
        self.prog_lang = prog_lang


class Manager(Employee):
    raise_amt = 1.07

    def __init__(self, first, last, pay, employees=None):
        super().__init__(first, last, pay)
        if employees is None:
            self.employees = []
        else:
            self.employees = employees

    def add_emp(self, emp):
        if emp not in self.employees:
            self.employees.append(emp)

    def remove_emp(self, emp):
        if emp in self.employees:
            self.employees.remove(emp)

    def print_emps(self):
        for emp in self.employees:
            print('-->', emp.fullname())


dev_1 = Developer('Corey', 'Schafer', 50000, 'Python')
dev_2 = Developer('Test', 'User', 60000, 'Python')

mgr_1 = Manager('Sue', 'Smith', 90000, [dev_1])

mgr_1.print_emps()

mgr_1.add_emp(dev_2)

mgr_1.print_emps()



#print(dev_1.pay)
#dev_1.apply_raise()
#print(dev_1.pay)


#emp_str_1 = "John-Doe-70000"
#emp_str_2 = "Steve-Smith-30000"
#emp_str_3 = "Jane-Doe-90000"

#new_emp_1 = Employee.from_string(emp_str_1)
#new_emp_2 = Employee.from_string(emp_str_2)
#new_emp_3 = Employee.from_string(emp_str_3)

#emp_1.raise_amt = 1.05

#print(Employee.raise_amt)
#print(emp_1.raise_amt)
#print(emp_2.raise_amt)

#print(new_emp_3.email)
#print(Employee.num_of_emps)


#my_date = datetime.date(2020, 3, 9)

#print(Employee.is_workday(my_date))


#dwie poniższe metody zapisu robią w gruncie rzeczy to samo
#print(emp_1.fullname())
#print(Employee.fullname(emp_1))

#Employee.set_raise_amt(1.05)

#print(Employee.raise_amt)
#print(emp_1.raise_amt)
#print(emp_2.raise_amt)

